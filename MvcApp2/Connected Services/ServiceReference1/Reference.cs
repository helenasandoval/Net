//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcApp2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class Usuario : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CedulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CiudadNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartamentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaNacimientoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TipoDocumentoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cedula {
            get {
                return this.CedulaField;
            }
            set {
                if ((object.ReferenceEquals(this.CedulaField, value) != true)) {
                    this.CedulaField = value;
                    this.RaisePropertyChanged("Cedula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CiudadNacimiento {
            get {
                return this.CiudadNacimientoField;
            }
            set {
                if ((object.ReferenceEquals(this.CiudadNacimientoField, value) != true)) {
                    this.CiudadNacimientoField = value;
                    this.RaisePropertyChanged("CiudadNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Departamento {
            get {
                return this.DepartamentoField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartamentoField, value) != true)) {
                    this.DepartamentoField = value;
                    this.RaisePropertyChanged("Departamento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaNacimiento {
            get {
                return this.FechaNacimientoField;
            }
            set {
                if ((this.FechaNacimientoField.Equals(value) != true)) {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUsuario {
            get {
                return this.IdUsuarioField;
            }
            set {
                if ((this.IdUsuarioField.Equals(value) != true)) {
                    this.IdUsuarioField = value;
                    this.RaisePropertyChanged("IdUsuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pais {
            get {
                return this.PaisField;
            }
            set {
                if ((object.ReferenceEquals(this.PaisField, value) != true)) {
                    this.PaisField = value;
                    this.RaisePropertyChanged("Pais");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TipoDocumento {
            get {
                return this.TipoDocumentoField;
            }
            set {
                if ((this.TipoDocumentoField.Equals(value) != true)) {
                    this.TipoDocumentoField = value;
                    this.RaisePropertyChanged("TipoDocumento");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ObtenerUsuarios", ReplyAction="http://tempuri.org/IMyService/ObtenerUsuariosResponse")]
        MvcApp2.ServiceReference1.Usuario[] ObtenerUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ObtenerUsuarios", ReplyAction="http://tempuri.org/IMyService/ObtenerUsuariosResponse")]
        System.Threading.Tasks.Task<MvcApp2.ServiceReference1.Usuario[]> ObtenerUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AgregarUsuario", ReplyAction="http://tempuri.org/IMyService/AgregarUsuarioResponse")]
        int AgregarUsuario(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AgregarUsuario", ReplyAction="http://tempuri.org/IMyService/AgregarUsuarioResponse")]
        System.Threading.Tasks.Task<int> AgregarUsuarioAsync(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ActualizarUsuario", ReplyAction="http://tempuri.org/IMyService/ActualizarUsuarioResponse")]
        int ActualizarUsuario(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ActualizarUsuario", ReplyAction="http://tempuri.org/IMyService/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task<int> ActualizarUsuarioAsync(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/EliminarUsuario", ReplyAction="http://tempuri.org/IMyService/EliminarUsuarioResponse")]
        int EliminarUsuario(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/EliminarUsuario", ReplyAction="http://tempuri.org/IMyService/EliminarUsuarioResponse")]
        System.Threading.Tasks.Task<int> EliminarUsuarioAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ObtenerPorId", ReplyAction="http://tempuri.org/IMyService/ObtenerPorIdResponse")]
        MvcApp2.ServiceReference1.Usuario ObtenerPorId(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/ObtenerPorId", ReplyAction="http://tempuri.org/IMyService/ObtenerPorIdResponse")]
        System.Threading.Tasks.Task<MvcApp2.ServiceReference1.Usuario> ObtenerPorIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : MvcApp2.ServiceReference1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<MvcApp2.ServiceReference1.IMyService>, MvcApp2.ServiceReference1.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public MvcApp2.ServiceReference1.Usuario[] ObtenerUsuarios() {
            return base.Channel.ObtenerUsuarios();
        }
        
        public System.Threading.Tasks.Task<MvcApp2.ServiceReference1.Usuario[]> ObtenerUsuariosAsync() {
            return base.Channel.ObtenerUsuariosAsync();
        }
        
        public int AgregarUsuario(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento) {
            return base.Channel.AgregarUsuario(Id, Nombre, Direccion, FechaNacimiento, Cedula, TipoDocumento, Pais, Departamento, CiudadNacimiento);
        }
        
        public System.Threading.Tasks.Task<int> AgregarUsuarioAsync(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento) {
            return base.Channel.AgregarUsuarioAsync(Id, Nombre, Direccion, FechaNacimiento, Cedula, TipoDocumento, Pais, Departamento, CiudadNacimiento);
        }
        
        public int ActualizarUsuario(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento) {
            return base.Channel.ActualizarUsuario(Id, Nombre, Direccion, FechaNacimiento, Cedula, TipoDocumento, Pais, Departamento, CiudadNacimiento);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarUsuarioAsync(int Id, string Nombre, string Direccion, System.DateTime FechaNacimiento, string Cedula, int TipoDocumento, string Pais, string Departamento, string CiudadNacimiento) {
            return base.Channel.ActualizarUsuarioAsync(Id, Nombre, Direccion, FechaNacimiento, Cedula, TipoDocumento, Pais, Departamento, CiudadNacimiento);
        }
        
        public int EliminarUsuario(int Id) {
            return base.Channel.EliminarUsuario(Id);
        }
        
        public System.Threading.Tasks.Task<int> EliminarUsuarioAsync(int Id) {
            return base.Channel.EliminarUsuarioAsync(Id);
        }
        
        public MvcApp2.ServiceReference1.Usuario ObtenerPorId(int Id) {
            return base.Channel.ObtenerPorId(Id);
        }
        
        public System.Threading.Tasks.Task<MvcApp2.ServiceReference1.Usuario> ObtenerPorIdAsync(int Id) {
            return base.Channel.ObtenerPorIdAsync(Id);
        }
    }
}
